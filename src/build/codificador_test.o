#! 
:ivl_version "13.0 (devel)" "(s20221226-103-g418bbc14b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "C:\Users\SEBAST~1\OneDrive\DOCUME~1\OSS-CA~1\lib\ivl\system.vpi";
:vpi_module "C:\Users\SEBAST~1\OneDrive\DOCUME~1\OSS-CA~1\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\Users\SEBAST~1\OneDrive\DOCUME~1\OSS-CA~1\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\Users\SEBAST~1\OneDrive\DOCUME~1\OSS-CA~1\lib\ivl\v2005_math.vpi";
:vpi_module "C:\Users\SEBAST~1\OneDrive\DOCUME~1\OSS-CA~1\lib\ivl\va_math.vpi";
:vpi_module "C:\Users\SEBAST~1\OneDrive\DOCUME~1\OSS-CA~1\lib\ivl\v2009.vpi";
S_0000000004920c60 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0000000004920df0 .scope module, "codificador_tb" "codificador_tb" 3 3;
 .timescale -9 -12;
v00000000048db360_0 .var "clk", 0 0;
v00000000048db5e0_0 .var "entrada", 3 0;
v00000000048dba40_0 .var "guardado", 0 0;
v00000000048db720_0 .net "numero", 15 0, L_00000000048db9a0;  1 drivers
v00000000048db860_0 .var "push", 0 0;
v00000000048dbc20_0 .var "rst", 0 0;
S_00000000048dbec0 .scope module, "uut" "Codificador" 3 13, 4 1 0, S_0000000004920df0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 1 "push";
    .port_info 3 /INPUT 1 "guardado";
    .port_info 4 /INPUT 4 "entrada";
    .port_info 5 /OUTPUT 16 "numero";
v00000000048db0e0_2 .array/port v00000000048db0e0, 2;
v00000000048dafa0_0 .net *"_ivl_14", 3 0, v00000000048db0e0_2;  1 drivers
L_0000000006150088 .functor BUFT 1, C4<0000>, C4<0>, C4<0>, C4<0>;
v00000000048db7c0_0 .net/2u *"_ivl_18", 3 0, L_0000000006150088;  1 drivers
v00000000048db0e0_0 .array/port v00000000048db0e0, 0;
v00000000048db040_0 .net *"_ivl_4", 3 0, v00000000048db0e0_0;  1 drivers
v00000000048db0e0_1 .array/port v00000000048db0e0, 1;
v00000000048db900_0 .net *"_ivl_9", 3 0, v00000000048db0e0_1;  1 drivers
v00000000048db0e0 .array "celdas", 0 3, 3 0;
v00000000048db4a0_0 .net "clk", 0 0, v00000000048db360_0;  1 drivers
v00000000048db180_0 .var "conteo", 0 0;
v00000000048db680_0 .net "entrada", 3 0, v00000000048db5e0_0;  1 drivers
v00000000048db220_0 .net "guardado", 0 0, v00000000048dba40_0;  1 drivers
v00000000048db2c0_0 .var/i "i", 31 0;
v00000000048db400_0 .net "numero", 15 0, L_00000000048db9a0;  alias, 1 drivers
v00000000048db540_0 .net "push", 0 0, v00000000048db860_0;  1 drivers
v00000000048dbe00_0 .net "rst", 0 0, v00000000048dbc20_0;  1 drivers
E_00000000048d6540 .event posedge, v00000000048db4a0_0;
L_00000000048db9a0 .concat8 [ 4 4 4 4], v00000000048db0e0_0, v00000000048db0e0_1, v00000000048db0e0_2, L_0000000006150088;
    .scope S_00000000048dbec0;
T_0 ;
    %wait E_00000000048d6540;
    %load/vec4 v00000000048dbe00_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000048db180_0, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000048db2c0_0, 0, 32;
T_0.2 ; Top of for-loop 
    %load/vec4 v00000000048db2c0_0;
    %cmpi/s 3, 0, 32;
    %jmp/0xz T_0.3, 5;
    %pushi/vec4 0, 0, 4;
    %ix/getv/s 3, v00000000048db2c0_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v00000000048db0e0, 0, 4;
T_0.4 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000048db2c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v00000000048db2c0_0, 0, 32;
    %jmp T_0.2;
T_0.3 ; for-loop exit label
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v00000000048db540_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.5, 8;
    %load/vec4 v00000000048db180_0;
    %pad/u 32;
    %cmpi/u 3, 0, 32;
    %jmp/0xz  T_0.7, 5;
    %pushi/vec4 2, 0, 32;
    %store/vec4 v00000000048db2c0_0, 0, 32;
T_0.9 ; Top of for-loop 
    %load/vec4 v00000000048db2c0_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_0.10, 5;
    %load/vec4 v00000000048db2c0_0;
    %subi 1, 0, 32;
    %ix/vec4/s 4;
    %load/vec4a v00000000048db0e0, 4;
    %ix/getv/s 3, v00000000048db2c0_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v00000000048db0e0, 0, 4;
T_0.11 ; for-loop step statement
    %load/vec4 v00000000048db2c0_0;
    %subi 1, 0, 32;
    %store/vec4 v00000000048db2c0_0, 0, 32;
    %jmp T_0.9;
T_0.10 ; for-loop exit label
    %load/vec4 v00000000048db680_0;
    %ix/load 3, 0, 0;
    %flag_set/imm 4, 0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v00000000048db0e0, 0, 4;
    %load/vec4 v00000000048db180_0;
    %pad/u 2;
    %addi 1, 0, 2;
    %pad/u 1;
    %assign/vec4 v00000000048db180_0, 0;
T_0.7 ;
T_0.5 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0000000004920df0;
T_1 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000048db360_0, 0, 1;
    %end;
    .thread T_1;
    .scope S_0000000004920df0;
T_2 ;
    %delay 5000, 0;
    %load/vec4 v00000000048db360_0;
    %inv;
    %store/vec4 v00000000048db360_0, 0, 1;
    %jmp T_2;
    .thread T_2;
    .scope S_0000000004920df0;
T_3 ;
    %vpi_call/w 3 28 "$display", "=========== Test Guardado ===========" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000048dbc20_0, 0, 1;
    %wait E_00000000048d6540;
    %delay 1000, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000048dbc20_0, 0, 1;
    %wait E_00000000048d6540;
    %delay 1000, 0;
    %pushi/vec4 10, 0, 4;
    %store/vec4 v00000000048db5e0_0, 0, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000048db860_0, 0, 1;
    %wait E_00000000048d6540;
    %delay 1000, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000048db860_0, 0, 1;
    %vpi_call/w 3 34 "$display", "Entrada=%b | salida=%b, %b, %b, %b", v00000000048db5e0_0, &PV<v00000000048db720_0, 12, 4>, &PV<v00000000048db720_0, 8, 4>, &PV<v00000000048db720_0, 4, 4>, &PV<v00000000048db720_0, 0, 4> {0 0 0};
    %pushi/vec4 2, 0, 4;
    %store/vec4 v00000000048db5e0_0, 0, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000048db860_0, 0, 1;
    %wait E_00000000048d6540;
    %delay 1000, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000048db860_0, 0, 1;
    %vpi_call/w 3 36 "$display", "Entrada=%b | salida=%b, %b, %b, %b", v00000000048db5e0_0, &PV<v00000000048db720_0, 12, 4>, &PV<v00000000048db720_0, 8, 4>, &PV<v00000000048db720_0, 4, 4>, &PV<v00000000048db720_0, 0, 4> {0 0 0};
    %pushi/vec4 13, 0, 4;
    %store/vec4 v00000000048db5e0_0, 0, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000048db860_0, 0, 1;
    %wait E_00000000048d6540;
    %delay 1000, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000048db860_0, 0, 1;
    %vpi_call/w 3 38 "$display", "Entrada=%b | salida=%b, %b, %b, %b", v00000000048db5e0_0, &PV<v00000000048db720_0, 12, 4>, &PV<v00000000048db720_0, 8, 4>, &PV<v00000000048db720_0, 4, 4>, &PV<v00000000048db720_0, 0, 4> {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000048dba40_0, 0, 1;
    %wait E_00000000048d6540;
    %delay 1000, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000048dba40_0, 0, 1;
    %pushi/vec4 9, 0, 4;
    %store/vec4 v00000000048db5e0_0, 0, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000048db860_0, 0, 1;
    %wait E_00000000048d6540;
    %delay 1000, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000048db860_0, 0, 1;
    %vpi_call/w 3 41 "$display", "Entrada=%b | salida=%b, %b, %b, %b", v00000000048db5e0_0, &PV<v00000000048db720_0, 12, 4>, &PV<v00000000048db720_0, 8, 4>, &PV<v00000000048db720_0, 4, 4>, &PV<v00000000048db720_0, 0, 4> {0 0 0};
    %vpi_call/w 3 43 "$display", v00000000048db720_0 {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000048dbc20_0, 0, 1;
    %wait E_00000000048d6540;
    %delay 1000, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000048dbc20_0, 0, 1;
    %wait E_00000000048d6540;
    %delay 1000, 0;
    %vpi_call/w 3 49 "$display", "Entrada= -   | salida=%b, %b, %b, %b", &PV<v00000000048db720_0, 12, 4>, &PV<v00000000048db720_0, 8, 4>, &PV<v00000000048db720_0, 4, 4>, &PV<v00000000048db720_0, 0, 4> {0 0 0};
    %vpi_call/w 3 51 "$finish" {0 0 0};
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "../sim/codificador_tb.sv";
    "../design/Codificador.sv";
